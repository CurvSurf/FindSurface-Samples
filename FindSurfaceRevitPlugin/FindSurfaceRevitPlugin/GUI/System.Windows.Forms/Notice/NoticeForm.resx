<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelNotice1.Text" xml:space="preserve">
    <value>This plugin is designed to demonstrate an example of Revit addin development using FindSurface SDK. It is not recommended to use this plugin for practical purposes.

You may have to restart Revit when the plugin malfunctions.

There are the following limitations in the plugin:</value>
  </data>
  <data name="richTextBox.Text" xml:space="preserve">
    <value>Save/load: 
    it is not implemented to save/load changes made by the plugin.
Using a single document only:
    the plugin won't work properly with multiple documents.
Deletion of point clouds:
    it works, but it will cause a failure in the plugin after doing that.
Undo/Redo:
    it will works on some, won't works on the others.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAEAAAAC0AAABIAAAAVwAAAFcAAABIAAAALQAAABAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAGAAAAOAAAAIoAAADJAAAA6wAAAPgAAAD9AAAA/QAAAPgAAADrAAAAyQAAAIkAAAA4AAAABgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAKgAAAJsAAADtAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AOwAAACbAAAAKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAFQAAADZAAAA/wAAAP8AAAD6AAAA1AAAAJ4AAAB0AAAAXwAAAF8AAAB0AAAAngAA
        ANUAAAD6AAAA/wAAAP8AAADZAAAAUwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAABlAAAA7QAAAP8AAAD9AAAAxwAAAF4AAAAZAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAGQAAAF8AAADIAAAA/QAAAP8AAADtAAAAZAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAAAO0AAAD/AAAA9QAAAIwAAAAYAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAACNAAAA9QAAAP8AAADtAAAAVAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsAAADYAAAA/wAAAPUAAAB1AAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAB2AAAA9QAAAP8AAADYAAAAKgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAmwAAAP8AAAD+AAAAjAAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAADoAAACkAAAApAAAADoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAACMAAAA/gAA
        AP8AAACaAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkAAADsAAAA/wAAAMYAAAAZAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAWgAAAP4AAAD+AAAAWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABkAAADHAAAA/wAAAOsAAAA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAigAAAP8AAAD6AAAAXwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaAAAA/gAAAP4AAABaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAF8AAAD7AAAA/wAAAIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADJAAAA/wAA
        ANQAAAAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFoAAAD+AAAA/gAAAFoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAGgAAANQAAAD/AAAAyQAAABAAAAAAAAAAAAAAAAAAAAAAAAAALQAA
        AOoAAAD/AAAAngAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWgAAAP4AAAD+AAAAWgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAngAAAP8AAADqAAAALQAAAAAAAAAAAAAAAAAA
        AAAAAABIAAAA+AAAAP8AAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaAAAA/gAA
        AP4AAABaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0AAAA/wAAAPgAAABIAAAAAAAA
        AAAAAAAAAAAAAAAAAFcAAAD9AAAA/wAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AFoAAAD+AAAA/gAAAFoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF8AAAD/AAAA/QAA
        AFcAAAAAAAAAAAAAAAAAAAAAAAAAVwAAAP0AAAD/AAAAXwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAWgAAAP0AAAD9AAAAWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXwAA
        AP8AAAD9AAAAVwAAAAAAAAAAAAAAAAAAAAAAAABIAAAA+AAAAP8AAAB0AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAgAAAAWgAAAFoAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB0AAAA/wAAAPgAAABIAAAAAAAAAAAAAAAAAAAAAAAAAC0AAADqAAAA/wAAAJ4AAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAJ4AAAD/AAAA6gAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAEAAAAMkAAAD/AAAA0wAA
        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
        wB/8AAA//wAA//+AAf//4Af///////////8=
</value>
  </data>
</root>